- content_for :title do
  Edusite
  |
  = @course.title

= link_to 'Courses', courses_path
\/
= link_to @course.title, course_path(@course)
%p

.row
  .col-lg-8.order-1.order-lg-1
    .jumbotron
      %h1.h3
        = @course.title
      %p
      .row
      Latest update -
      = @course.updated_at.strftime("%m/%Y")
      .row
      Language -
      .fa.fa-globe-africa
      = @course.language
      .row
      Level -
      .fa.fa-signal
      = @course.level
      %p
      = @course.description

    %h2.h4.my-3
      .fa.fa-tasks
      = pluralize(@course.lessons_count, "Lesson")
      .float-right
        .fa.fa-spinner
        = number_to_percentage(@course.progress(current_user), precision: 0)

    .list-group.lesson-sortable
      - @lessons.each do |lesson|
        = content_tag "div", id: "lesson-#{lesson.id}", data: { model_name: lesson.class.name.underscore, update_url: course_lesson_sort_path(@course, lesson)} do
          .list-group-item.py-3
            .fa.fa-sort.all-scroll{:style => "cursor: grab;"}
            = render 'lessons/lesson_preview', lesson: lesson

    %h2.h4.my-3
      .fa.fa-comment
      = pluralize(@enrollments_with_review.count, "Review")
    - @enrollments_with_review.each do |enrollment|
      %p.my-2
        = render 'enrollments/enrollment', enrollment: enrollment


  .col-lg-4.order-0.order-lg-1
    = render @course

%h2.h4.my-3
  Similar courses
.card-columns
  - @similar_courses.each do |course|
    - unless @course.tags.pluck(:id).intersection(course.tags.pluck(:id)).count.zero?
      = render 'courses/course', course: course
